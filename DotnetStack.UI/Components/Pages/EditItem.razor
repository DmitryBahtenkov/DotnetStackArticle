@page "/edititem/{Id}"
@using DotnetStack.UI.Models
@inject ToDoService ToDoService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit Task</h3>

@if (editItem == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="editItem" FormName="Edit Form" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Title: </label>
            <InputText class="form-control" id="title" @bind-Value="editItem.Title" />
        </div>
        <div>
            <label>Description: </label>
            <InputText class="form-control" id="description" @bind-Value="editItem.Description" />
        </div>
        <div>
            <label>Deadline: </label>
            <InputDate class="form-control" id="deadline" @bind-Value="editItem.Deadline" />
        </div>

        <button class="btn btn-primary" type="submit">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private ToDoItem editItem;

    protected override async Task OnInitializedAsync()
    {
        editItem = await ToDoService.GetToDoItemByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await ToDoService.UpdateToDoItemAsync(editItem);
        NavigationManager.NavigateTo("/todolist");
    }
}